<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    body {
      background-color: #1e1e2e;
      color: #cdd6f4;
    }
    .navbar {
      background-color: #181825 !important;
      border-bottom: 1px solid #313244;
    }
    .card {
      background-color: #181825;
      border: 1px solid #313244;
    }
    .card-header {
      background-color: #11111b;
      border-bottom: 1px solid #313244;
    }
    .form-control, .form-select {
      background-color: #1e1e2e;
      border: 1px solid #313244;
      color: #cdd6f4;
    }
    .form-control:focus, .form-select:focus {
      background-color: #1e1e2e;
      border-color: #89b4fa;
      color: #cdd6f4;
      box-shadow: 0 0 0 0.25rem rgba(137, 180, 250, 0.25);
    }
    .btn-primary {
      background-color: #89b4fa;
      border-color: #89b4fa;
      color: #11111b;
    }
    .btn-primary:hover {
      background-color: #b4befe;
      border-color: #b4befe;
      color: #11111b;
    }
    .btn-outline-secondary {
      color: #cdd6f4;
      border-color: #313244;
    }
    .btn-outline-secondary:hover {
      background-color: #313244;
      border-color: #313244;
      color: #cdd6f4;
    }
    .alert-success {
      background-color: #a6e3a1;
      border-color: #a6e3a1;
      color: #11111b;
    }
    .alert-info {
      background-color: #89b4fa;
      border-color: #89b4fa;
      color: #11111b;
    }
    .table-dark {
      --bs-table-bg: #181825;
      --bs-table-border-color: #313244;
    }
    .modal-content {
      background-color: #181825;
      border: 1px solid #313244;
    }
    .modal-header {
      border-bottom: 1px solid #313244;
    }
    .car-card {
      transition: transform 0.2s ease-in-out;
      cursor: pointer;
    }
    .car-card:hover {
      transform: translateY(-2px);
      border-color: #89b4fa !important;
    }
    .user-id-display {
      font-family: 'Courier New', monospace;
      font-size: 0.9em;
      background-color: #313244;
      padding: 0.5rem;
      border-radius: 0.375rem;
      border: 1px solid #45475a;
      word-break: break-all;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/demo1">
        <i class="bi bi-car-front-fill me-2"></i>AutoFinder
      </a>
      <div class="navbar-nav ms-auto">
        <a class="nav-link" href="/demo1/docs">
          <i class="bi bi-book me-1"></i>üìã Documentation
        </a>
        <a class="nav-link" href="/demo1/emails">
          <i class="bi bi-envelope me-1"></i>üìß Email Preview
        </a>
        <a class="nav-link" href="/">‚Üê Back to Demos</a>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row justify-content-center">
      <div class="col-md-6">
        <div class="card">
          <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-search me-2"></i>AutoFinder - Car Search</h5>
          </div>
          <div class="card-body">
            <form id="searchForm">
              <div class="mb-3">
                <label for="make" class="form-label">Make</label>
                <input type="text" class="form-control" id="make" placeholder="e.g., Toyota, Honda">
              </div>
              
              <div class="row">
                <div class="col-6">
                  <div class="mb-3">
                    <label for="minPrice" class="form-label">Min Price</label>
                    <input type="number" class="form-control" id="minPrice" placeholder="$">
                  </div>
                </div>
                <div class="col-6">
                  <div class="mb-3">
                    <label for="maxPrice" class="form-label">Max Price</label>
                    <input type="number" class="form-control" id="maxPrice" placeholder="$">
                  </div>
                </div>
              </div>
              
              <div class="mb-3">
                <label for="zipCode" class="form-label">Zip Code</label>
                <select class="form-select" id="zipCode">
                  <option value="">All Areas</option>
                  <option value="02201">02201 - Boston</option>
                  <option value="44333">44333 - Cleveland</option>
                  <option value="90210">90210 - Beverly Hills</option>
                  <option value="10001">10001 - New York</option>
                </select>
              </div>
              
              <div class="mb-3">
                <label for="distance" class="form-label">Distance</label>
                <select class="form-select" id="distance">
                  <option value="25">25 miles</option>
                  <option value="50">50 miles</option>
                  <option value="100">100 miles</option>
                  <option value="nationwide" selected>Nationwide</option>
                </select>
              </div>
              
              <div class="mb-3">
                <label for="saveName" class="form-label">Save Search As</label>
                <input type="text" class="form-control" id="saveName" placeholder="Optional - name your search">
              </div>
              
              <button type="submit" class="btn btn-primary w-100">
                <i class="bi bi-search me-2"></i>Search Cars
              </button>
            </form>
            
            <hr class="my-4">
            
            <div id="userInfo">
              <h6 class="mb-3"><i class="bi bi-person-badge me-2"></i>Current User Session</h6>
              <p class="mb-2">User ID:</p>
              <div id="currentUserId" class="user-id-display">
                <em>Search to generate session</em>
              </div>
            </div>
            
            <div id="savedSearchInfo" class="mt-4" style="display: none;">
              <hr class="my-4">
              <h6 class="mb-3"><i class="bi bi-bookmark me-2"></i>Search Saved</h6>
              <div class="alert alert-success">
                <p class="mb-2"><strong>Your search has been saved!</strong></p>
                <p class="mb-1">Search ID: <span id="savedSearchId" class="user-id-display" style="display: inline-block; padding: 0.25rem 0.5rem;"></span></p>
                <small class="text-muted">You can access this search later at: <code>/demo1/api/saved-searches/{ID}</code></small>
              </div>
            </div>
            
            <div id="emailNotification" class="mt-4" style="display: none;">
              <hr class="my-4">
              <div class="alert alert-info">
                <h6 class="mb-2"><i class="bi bi-envelope-check me-2"></i>Email Notification Sent!</h6>
                <p class="mb-2">An email notification has been sent with your search criteria. This demonstrates the HTML injection vulnerability.</p>
                <a href="/demo1/emails" class="btn btn-primary btn-sm">
                  <i class="bi bi-envelope-open me-2"></i>View Email Preview
                </a>
              </div>
            </div>
            
            <div id="searchResults" class="mt-4" style="display: none;">
              <hr class="my-4">
              <h6 class="mb-3"><i class="bi bi-car-front me-2"></i>Search Results</h6>
              <div id="resultsContent"></div>
            </div>
            
            <div id="appointmentSection" class="mt-4">
              <hr class="my-4">
              <h6 class="mb-3"><i class="bi bi-calendar-check me-2"></i>Schedule Dealership Appointment</h6>
              <div class="card">
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="dealerId" class="form-label">Dealership ID</label>
                        <input type="text" class="form-control" id="dealerId" value="6017" placeholder="e.g., 6017">
                        <div class="form-text">Popular dealership from documentation</div>
                      </div>
                      <div class="mb-3">
                        <label for="appointmentDate" class="form-label">Appointment Date</label>
                        <input type="date" class="form-control" id="appointmentDate" value="2023-02-07">
                      </div>
                      <div class="mb-3">
                        <label for="appointmentTime" class="form-label">Appointment Time</label>
                        <select class="form-select" id="appointmentTime">
                          <option value="09:00:00">9:00 AM</option>
                          <option value="09:30:00">9:30 AM</option>
                          <option value="10:00:00">10:00 AM</option>
                          <option value="10:30:00">10:30 AM</option>
                          <option value="11:00:00">11:00 AM</option>
                          <option value="11:30:00">11:30 AM</option>
                          <option value="12:00:00">12:00 PM</option>
                          <option value="12:30:00">12:30 PM</option>
                          <option value="13:00:00">1:00 PM</option>
                          <option value="13:30:00">1:30 PM</option>
                          <option value="14:00:00">2:00 PM</option>
                          <option value="14:30:00">2:30 PM</option>
                          <option value="15:00:00">3:00 PM</option>
                          <option value="15:30:00">3:30 PM</option>
                          <option value="16:00:00">4:00 PM</option>
                          <option value="16:30:00">4:30 PM</option>
                          <option value="17:00:00">5:00 PM</option>
                          <option value="17:30:00">5:30 PM</option>
                        </select>
                      </div>
                    </div>
                    <div class="col-md-6">
                      <div class="mb-3">
                        <label for="appointmentUserId" class="form-label">User ID (for demonstration)</label>
                        <input type="text" class="form-control" id="appointmentUserId" placeholder="Will use current session user ID">
                        <div class="form-text">Leave blank to use current session user</div>
                      </div>
                      <div class="mb-3">
                        <label for="phoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" value="555-DEMO-123" placeholder="555-123-4567">
                      </div>
                    </div>
                  </div>
                  
                  <div>
                    <button type="button" class="btn btn-primary" onclick="bookAppointment()">
                      <i class="bi bi-calendar-plus me-2"></i>Book Appointment
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
            <div id="appointmentResults" class="mt-4" style="display: none;">
              <hr class="my-4">
              <h6 class="mb-3"><i class="bi bi-check-circle me-2"></i>Appointment Results</h6>
              <div id="appointmentContent"></div>
            </div>
            
          </div>
        </div>
      </div>
    </div>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    let currentUserId = null;
    let currentSearchParams = null;
    
    document.getElementById('searchForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = {
        make: document.getElementById('make').value,
        minPrice: document.getElementById('minPrice').value,
        maxPrice: document.getElementById('maxPrice').value,
        zipCode: document.getElementById('zipCode').value,
        distance: document.getElementById('distance').value,
        userId: currentUserId
      };
      
      // Store current search params for potential saving later
      currentSearchParams = {
        make: formData.make,
        minPrice: formData.minPrice,
        maxPrice: formData.maxPrice,
        zipCode: formData.zipCode,
        distance: formData.distance
      };
      
      try {
        const response = await fetch('/demo1/search', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        currentUserId = data.userId;
        
        document.getElementById('currentUserId').textContent = currentUserId;
        
        displayResults(data.results);
        
      } catch (error) {
        console.error('Search failed:', error);
      }
    });
    
    function displayResults(results) {
      const resultsContainer = document.getElementById('searchResults');
      const resultsContent = document.getElementById('resultsContent');
      
      resultsContainer.style.display = 'block';
      
      if (results.length === 0) {
        resultsContent.innerHTML = `
          <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>No cars found matching your criteria. Try adjusting your search parameters.
          </div>
        `;
        return;
      }
      
      let resultsHTML = `<p class="text-muted mb-3">${results.length} cars found</p>`;
      
      results.forEach(car => {
        resultsHTML += `
          <div class="card mb-3">
            <div class="card-body">
              <h6 class="card-title">${car.year} ${car.make} ${car.model}</h6>
              <p class="card-text">
                <span class="badge bg-success">$${car.price.toLocaleString()}</span>
                <span class="badge bg-secondary ms-2">${car.zipCode}</span>
              </p>
              <button class="btn btn-outline-secondary btn-sm" onclick="saveCar(${car.id})">
                <i class="bi bi-bookmark me-1"></i>Save Search
              </button>
            </div>
          </div>
        `;
      });
      
      resultsContent.innerHTML = resultsHTML;
    }
    
    function displaySavedSearch(searchId) {
      const savedSearchContainer = document.getElementById('savedSearchInfo');
      const savedSearchIdElement = document.getElementById('savedSearchId');
      
      savedSearchIdElement.textContent = searchId;
      savedSearchContainer.style.display = 'block';
    }
    
    function showEmailNotification() {
      const emailNotificationContainer = document.getElementById('emailNotification');
      emailNotificationContainer.style.display = 'block';
      
      // Scroll to the notification to make it visible
      emailNotificationContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }
    
    async function saveCar(carId) {
      if (!currentUserId || !currentSearchParams) {
        alert('Please perform a search first to establish a session.');
        return;
      }
      
      const btn = event.target.closest('button');
      const originalContent = btn.innerHTML;
      btn.innerHTML = '<i class="bi bi-arrow-clockwise spin me-1"></i>Saving...';
      btn.disabled = true;
      
      try {
        // Save the search (not the individual car)
        const searchData = {
          userId: currentUserId,
          name: document.getElementById('saveName').value || null, // Name is optional
          searchCriteria: currentSearchParams
        };
        
        const response = await fetch('/demo1/api/saved-searches', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(searchData)
        });
        
        const result = await response.json();
        
        if (result.result === 'Success') {
          btn.innerHTML = '<i class="bi bi-heart-fill me-1"></i>Search Saved!';
          btn.classList.remove('btn-outline-secondary');
          btn.classList.add('btn-success');
          
          // Show the saved search info
          displaySavedSearch(result.searchId);
          
          // Show email notification if email was sent
          if (result.emailSent) {
            showEmailNotification();
          }
        } else {
          throw new Error('Failed to save search');
        }
        
      } catch (error) {
        console.error('Save failed:', error);
        btn.innerHTML = originalContent;
        btn.disabled = false;
        alert('Failed to save search. Please try again.');
      }
    }
    
    async function bookAppointment() {
      const dealerId = document.getElementById('dealerId').value;
      const appointmentDate = document.getElementById('appointmentDate').value;
      const appointmentTime = document.getElementById('appointmentTime').value;
      const phoneNumber = document.getElementById('phoneNumber').value;
      let userId = document.getElementById('appointmentUserId').value;
      
      // Use current session user if no specific user ID provided
      if (!userId) {
        if (!currentUserId) {
          alert('Please perform a search first to establish a session, or provide a specific User ID.');
          return;
        }
        userId = currentUserId;
      }
      
      if (!dealerId || !appointmentDate || !appointmentTime) {
        alert('Please fill in all required fields.');
        return;
      }
      
      try {
        const response = await fetch(`/api/appointments/legacy/${dealerId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            appointmentTime: appointmentTime,
            appointmentDate: appointmentDate,
            phoneNumber: phoneNumber,
            originPageId: 'demo1_ui',
            userId: userId,
            skipEmailConfirmation: true
          })
        });
        
        const result = await response.json();
        
        if (result.result === 'Success') {
          showAppointmentResult(`
            <div class="alert alert-success">
              <h6><i class="bi bi-check-circle me-2"></i>Appointment Booked Successfully!</h6>
              <p><strong>Dealership:</strong> ${dealerId}</p>
              <p><strong>Date:</strong> ${appointmentDate}</p>
              <p><strong>Time:</strong> ${appointmentTime}</p>
              <p><strong>User ID:</strong> ${userId}</p>
              <p><strong>Phone:</strong> ${phoneNumber}</p>
            </div>
          `);
        } else {
          showAppointmentResult(`
            <div class="alert alert-danger">
              <h6><i class="bi bi-exclamation-triangle me-2"></i>Booking Failed</h6>
              <p>${result.error || 'Unknown error occurred'}</p>
            </div>
          `);
        }
      } catch (error) {
        console.error('Appointment booking failed:', error);
        showAppointmentResult(`
          <div class="alert alert-danger">
            <h6><i class="bi bi-exclamation-triangle me-2"></i>Error</h6>
            <p>Failed to book appointment. Please try again.</p>
          </div>
        `);
      }
    }
    
    
    function showAppointmentResult(content) {
      document.getElementById('appointmentContent').innerHTML = content;
      document.getElementById('appointmentResults').style.display = 'block';
      document.getElementById('appointmentResults').scrollIntoView({ behavior: 'smooth' });
    }
    
  </script>
</body>
</html>